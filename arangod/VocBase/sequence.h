////////////////////////////////////////////////////////////////////////////////
/// @brief sequences
///
/// @file
///
/// DISCLAIMER
///
/// Copyright 2010-2011 triagens GmbH, Cologne, Germany
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///
///     http://www.apache.org/licenses/LICENSE-2.0
///
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// Copyright holder is triAGENS GmbH, Cologne, Germany
///
/// @author Jan Steemann
/// @author Copyright 2013, triagens GmbH, Cologne, Germany
////////////////////////////////////////////////////////////////////////////////

#ifndef TRIAGENS_DURHAM_VOC_BASE_SEQUENCE_H
#define TRIAGENS_DURHAM_VOC_BASE_SEQUENCE_H 1

#include "BasicsC/common.h"
#include "BasicsC/locks.h"

#ifdef __cplusplus
extern "C" {
#endif

// -----------------------------------------------------------------------------
// --SECTION--                                                      public types
// -----------------------------------------------------------------------------

////////////////////////////////////////////////////////////////////////////////
/// @addtogroup VocBase
/// @{
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
/// @brief sequence value type
////////////////////////////////////////////////////////////////////////////////

typedef uint64_t TRI_sequence_value_t;

////////////////////////////////////////////////////////////////////////////////
/// @brief a sequence, protected by a lock
////////////////////////////////////////////////////////////////////////////////

typedef struct TRI_sequence_s {
  TRI_spin_t _lock;
  TRI_sequence_value_t _value;
}
TRI_sequence_t;

////////////////////////////////////////////////////////////////////////////////
/// @}
////////////////////////////////////////////////////////////////////////////////

// -----------------------------------------------------------------------------
// --SECTION--                                        constructors / destructors
// -----------------------------------------------------------------------------

////////////////////////////////////////////////////////////////////////////////
/// @addtogroup VocBase
/// @{
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
/// @brief create a new sequence
////////////////////////////////////////////////////////////////////////////////

TRI_sequence_t* TRI_CreateSequence (TRI_memory_zone_t*, TRI_sequence_value_t);

////////////////////////////////////////////////////////////////////////////////
/// @brief initialise a sequence
////////////////////////////////////////////////////////////////////////////////

void TRI_InitSequence (TRI_sequence_t*, TRI_sequence_value_t);

////////////////////////////////////////////////////////////////////////////////
/// @brief destroy a sequence
////////////////////////////////////////////////////////////////////////////////

void TRI_DestroySequence (TRI_sequence_t*);

////////////////////////////////////////////////////////////////////////////////
/// @brief free a sequence
////////////////////////////////////////////////////////////////////////////////

void TRI_FreeSequence (TRI_memory_zone_t*, TRI_sequence_t*);

////////////////////////////////////////////////////////////////////////////////
/// @}
////////////////////////////////////////////////////////////////////////////////

// -----------------------------------------------------------------------------
// --SECTION--                                                  public functions
// -----------------------------------------------------------------------------

////////////////////////////////////////////////////////////////////////////////
/// @addtogroup VocBase
/// @{
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
/// @brief atomically increase the value in the sequence
////////////////////////////////////////////////////////////////////////////////

TRI_sequence_value_t TRI_IncreaseSequence (TRI_sequence_t*);

////////////////////////////////////////////////////////////////////////////////
/// @brief atomically get the value of the sequence
////////////////////////////////////////////////////////////////////////////////

TRI_sequence_value_t TRI_GetValueSequence (TRI_sequence_t*);

////////////////////////////////////////////////////////////////////////////////
/// @brief atomically set the value in the sequence
////////////////////////////////////////////////////////////////////////////////

void TRI_SetValueSequence (TRI_sequence_t*, TRI_sequence_value_t);

////////////////////////////////////////////////////////////////////////////////
/// @brief set the value in the sequence, without acquiring the lock
////////////////////////////////////////////////////////////////////////////////

void TRI_SetValueNoLockSequence (TRI_sequence_t*, TRI_sequence_value_t);

////////////////////////////////////////////////////////////////////////////////
/// @}
////////////////////////////////////////////////////////////////////////////////

#ifdef __cplusplus
}
#endif

// -----------------------------------------------------------------------------
// --SECTION--                                                       END-OF-FILE
// -----------------------------------------------------------------------------

#endif

// Local Variables:
// mode: outline-minor
// outline-regexp: "^\\(/// @brief\\|/// {@inheritDoc}\\|/// @addtogroup\\|// --SECTION--\\|/// @\\}\\)"
// End:
